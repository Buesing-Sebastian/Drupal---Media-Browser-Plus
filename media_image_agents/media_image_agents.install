<?php
// $Id$

/**
 * installs role and permissions
 */
function media_image_agents_install() {
  // set default values
  variable_set('media_image_agents_include_subfolders', 0);
  variable_set('media_image_agents_match_all_tags', 0);
  variable_set('media_image_agents_field_folder', array("0" => "0"));
  variable_set('media_image_agents_media_types', implode(",", array_keys(media_type_get_types())));
  variable_set('media_image_agents_field_tags', array());
  variable_set('media_image_agents_affected_roles', array());
  // update the authenticated/anonymous user role
  $role = user_role_load_by_name('authenticated user');
  if(isset($role->rid))
    user_role_revoke_permissions($role->rid, array('view media'));
  $role = user_role_load_by_name('anonymous user');
  if(isset($role->rid))
    user_role_revoke_permissions($role->rid, array('view media'));
  // add description field
  $field = array(
    'field_name' => 'field_description',
    'label' => st('Description'),
    'type' => 'text_long',
    'entity_type' => 'media',
    'bundle' => 'image',
    'required' => FALSE
  );
  _media_browser_plus_ensure_field($field);
  // ensure instance for each media bundle
  foreach(array_keys(media_type_get_types()) as $bundle){
    $field['bundle'] = $bundle;
    _media_browser_plus_ensure_instance($field);
  }
}

/**
 * remove role
 */
function media_image_agents_uninstall() {
  variable_del('media_image_agents_include_subfolders');
  variable_del('media_image_agents_match_all_tags');
  variable_del('media_image_agents_field_folder');
  variable_del('media_image_agents_media_types');
  variable_del('media_image_agents_field_tags');
  $old_roles = variable_get('media_image_agents_affected_roles');
  // revoke permissions
  if(count($old_roles)) {
    foreach($old_roles as $rid) {
      _media_image_agents_affect_role($rid, true);
    }
  }
  variable_del('media_image_agents_affected_roles');
  field_delete_field('field_description');
}